name: test_run

on:
  push:
  pull_request:
    branches: [ "dev_branch" ]
env:
  DBT_PROFILES_DIR: ./
  SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
  SF_DATABASE: ${{  secrets.SF_DATABASE }}
  SF_PASSWORD: ${{  secrets.SF_PASSWORD }} 
  SF_ROLE: ${{  secrets.SF_ROLE }}
  SF_SCHEMA: ${{  secrets.SF_SCHEMA }}
  SF_USERNAME: ${{  secrets.SF_USERNAME }}
  SF_WAREHOUSE: ${{  secrets.SF_WAREHOUSE }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

    
  DeployDev: 
    name: Deploy to dev
    runs-on: ubuntu-latest
    environment:
      name: DEV
    env:
      DBT_PROFILES_DIR: ./
      SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      SF_DATABASE: ${{  secrets.SF_DATABASE }}
      SF_PASSWORD: ${{  secrets.SF_PASSWORD }} 
      SF_ROLE: ${{  secrets.SF_ROLE }}
      SF_SCHEMA: ${{  secrets.SF_SCHEMA }}
      SF_USERNAME: ${{  secrets.SF_USERNAME }}
      SF_WAREHOUSE: ${{  secrets.SF_WAREHOUSE }}
    steps:
      - name: Check out
        uses: actions/checkout@master
        
      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"   
         
      - name: Install dependencies
        run: |
         pip install dbt-snowflake
         dbt deps   
      
      - name: Run dbt models
        id: run_models 
        run: dbt run --target dev

      - name: Run queries
        uses: anecdotes-ai/snowflake-query
        with:
          snowflake_account: ${{ secrets.SF_ACCOUNT }}
          snowflake_password: ${{  secrets.SF_PASSWORD }} 
          snowflake_username: ${{  secrets.SF_USERNAME }}
          snowflake_warehouse: ${{  secrets.SF_WAREHOUSE }}
          queries: 'DROP SCHEMA REPORT;'
                # single quote is escaped with another single quote
        
      - name: Version Query Validation
        run: |
            ${{contains(steps.run_queries.outputs.queries_output, '5.20.1')}} 
       
      # - name: Run dbt
      #   run: scripts\drop_schema.sql
        
      # - name: Test dbt models
      #   id: run_tests
      #   run: dbt test
      #   continue-on-error: true

      # - name: Check on failures
      #   if: steps.run_tests.outputs.status == 'failure'
      #   run: scripts\drop_schema.sql



