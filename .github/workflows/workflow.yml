name: test_run

on:
  push:
  pull_request:
    branches: [ "dev_branch" ]
env:
  DBT_PROFILES_DIR: ./
  SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
  SF_DATABASE: ${{  secrets.SF_DATABASE }}
  SF_PASSWORD: ${{  secrets.SF_PASSWORD }} 
  SF_ROLE: ${{  secrets.SF_ROLE }}
  SF_SCHEMA: ${{  secrets.SF_SCHEMA }}
  SF_USERNAME: ${{  secrets.SF_USERNAME }}
  SF_WAREHOUSE: ${{  secrets.SF_WAREHOUSE }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      
    
  DeployDev: 
    name: Deploy to dev
    runs-on: ubuntu-latest
    environment:
      name: DEV
    env:
      DBT_PROFILES_DIR: ./
      SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      SF_DATABASE: ${{  secrets.SF_DATABASE }}
      SF_PASSWORD: ${{  secrets.SF_PASSWORD }} 
      SF_ROLE: ${{  secrets.SF_ROLE }}
      SF_SCHEMA: ${{  secrets.SF_SCHEMA }}
      SF_USERNAME: ${{  secrets.SF_USERNAME }}
      SF_WAREHOUSE: ${{  secrets.SF_WAREHOUSE }}
    steps:
      - name: Check out
        uses: actions/checkout@master
    
      - name: Checkout Repository
        uses: actions/checkout@v2  
        
      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"   
          
         
      - name: Install dependencies
        run: |
         pip install dbt-snowflake
         dbt deps   
      
      - name: Run dbt models
        id: run_models 
        run: dbt run --target dev

      - name: Test dbt models
        id: run_tests
        run: dbt test
        continue-on-error: true        

      - name: Snowflake Query Action
        uses: anecdotes-ai/snowflake-query@1.1      
        with:
          snowflake_account: ${{ secrets.SF_ACCOUNT }}
          snowflake_password: ${{  secrets.SF_PASSWORD }} 
          snowflake_username: ${{  secrets.SF_USERNAME }}
          snowflake_warehouse: ${{  secrets.SF_WAREHOUSE }}
          queries: 'DROP SCHEMA RAW_DATA.REPORT'
        if: steps.run_tests.outcome == 'failure' 
  
      - name: SQL INGECTION
        uses: anecdotes-ai/snowflake-query@1.1      
        with:
          snowflake_account: ${{ secrets.SF_ACCOUNT }}
          snowflake_password: ${{  secrets.SF_PASSWORD }} 
          snowflake_username: ${{  secrets.SF_USERNAME }}
          snowflake_warehouse: ${{  secrets.SF_WAREHOUSE }}
          queries: 'DROP SCHEMA RAW_DATA.REPORT'
        if: steps.run_tests.outcome == 'failure' 
                
  sql-review:
    
    runs-on: ubuntu-latest
    needs: DeployDev
    name: SQL Review
    steps:
            - uses: actions/checkout@v3
            - name: Check SQL
              # You can change it to a specific version like bytebase/sql-review-action@0.0.4
              # We suggest using the latest version through the tag. Check it at https://github.com/Bytebase/sql-review-action/tags
              uses: bytebase/sql-review-action@main
              with:
                override-file-path: workflow.yml
                # template-id: "<SQL review rule template id>"
                database-type: MySQL
                file-pattern: /models/*.sql